#!/usr/bin/env python

import sys
import os
import errno

import make_screen

PROJ_DIR = "/uod/idr/filesets/idr0016-wawer-bioactivecompoundprofiling"
DATA_DIRS = [
    os.path.join(PROJ_DIR, "2016-02-19-screens-cellimagelibrary"),
    os.path.join(PROJ_DIR, "2016-01-19-screens-bbbc022"),
    os.path.join(PROJ_DIR, "2017-07-14-cellimagelibrary-60newplates"),
]
EXP_CHANNELS = ['ERSyto', 'ERSytoBleed', 'Hoechst', 'Mito', 'Ph_golgi']
STATS_FN = "stats.txt"


def mkdir_p(path):
    try:
        os.makedirs(path)
    except OSError as e:
        if e.errno != errno.EEXIST:
            raise


def get_stats(data_dir, plate):
    stats = []
    for c in EXP_CHANNELS:
        subd = os.path.join(data_dir, "%s-%s" % (plate, c))
        try:
            stats.append(str(len(os.listdir(subd))))
        except OSError:
            stats.append("NOT_FOUND")
    return stats


def main(argv):
    this_dir = os.path.dirname(os.path.abspath(__file__))
    parent = os.path.dirname(this_dir)
    screens_dir = os.path.join(parent, "screens")
    plates_fn = os.path.join(
        parent, "screenA", "idr0016-screenA-plates.tsv"
    )
    rel_screens_dir = os.path.join(os.pardir, "screens")  # wrt plates_fn
    mkdir_p(screens_dir)
    mkdir_p(os.path.dirname(plates_fn))
    with open(STATS_FN, "w") as fo, open(plates_fn, "w") as fp:
        fo.write("PLATE\t%s\n" % ("\t".join(EXP_CHANNELS)))
        for data_dir in DATA_DIRS:
            print "data dir: %s" % (data_dir)
            channel_map = make_screen.get_channel_map(data_dir)
            total = len(channel_map)
            for i, plate in enumerate(channel_map):
                print "  plate: %s [%d/%d]" % (plate, i + 1, total)
                screen_bn = "%s.screen" % plate
                screen_fn = os.path.join(screens_dir, screen_bn)
                fo.write("%s\t%s\n" % (
                    plate, "\t".join(get_stats(data_dir, plate))
                ))
                make_screen.main([
                    "dummy", data_dir, "-o", screen_fn, "-p", plate
                ])
                fp.write("%s\t%s.screen\n" %
                         (plate, os.path.join(rel_screens_dir, plate)))


if __name__ == "__main__":
    main(sys.argv)
