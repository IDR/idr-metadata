#!/usr/bin/env python

import sys
import os
import errno
import operator

import make_screen
from common import get_data_dirs


def map_dir_names(data_dirs):
    name_map = {}
    for d in data_dirs:
        parts = d.split("/")
        treatment, mouse, day = [_.rsplit(" ", 1)[-1] for _ in parts[7:10]]
        try:
            t = parts[11]
        except IndexError:  # mouse 64/day 6-3 exception
            t = "NONE"
        # use '.' since '_' and '-' are already present in the parts
        name_map[d] = ".".join([treatment, mouse, day, t])
    return name_map


def main(argv):
    data_dirs = get_data_dirs()
    name_map = map_dir_names(data_dirs)
    this_dir = os.path.dirname(os.path.abspath(__file__))
    parent = os.path.dirname(this_dir)
    screens_dir = os.path.join(parent, "screens")
    plates_fn = os.path.join(parent, "screenA", "idr0026-screenA-plates.tsv")
    rel_screens_dir = os.path.join(os.pardir, "screens")  # wrt plates_fn
    try:
        os.makedirs(screens_dir)
        os.makedirs(os.path.dirname(plates_fn))
    except OSError as e:
        if e.errno == errno.ENOENT:
            pass
    with open(plates_fn, "w") as fp:
        for d, name in sorted(name_map.items(), key=operator.itemgetter(1)):
            screen_fn = os.path.join(screens_dir, "%s.screen" % name)
            make_screen.main(["dummy", d, "-o", screen_fn, "-p", name])
            fp.write("%s\t%s.screen\n" %
                     (name, os.path.join(rel_screens_dir, name)))


if __name__ == "__main__":
    main(sys.argv)
