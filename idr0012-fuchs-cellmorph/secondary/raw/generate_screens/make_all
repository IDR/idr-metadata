#!/usr/bin/env python

import sys
import os
import errno
import make_screen

# two cell lines: HeLa (H) and U2OS (U)
ROOT = ("/uod/idr/filesets/idr0012-fuchs-cellmorph/downloaded/secondary/"
        "source-%(cl)sR/www.ebi.ac.uk/huber-srv/cellmorph/source-%(cl)sR")
CL_TO_SCREEN = {"H": "B", "U": "C"}
EXCLUDED = frozenset(["UR301-1"])


def quiet_makedirs(d):
    try:
        os.makedirs(d)
    except OSError as e:
        if e.errno == errno.ENOENT:
            pass


def main(argv):
    this_dir = os.path.dirname(os.path.abspath(__file__))
    parent = os.path.dirname(this_dir)
    screens_dir = os.path.join(parent, "screens")
    study_root, a, b = parent.rsplit(os.sep, 2)
    plates_fn_template = os.path.join(
        study_root, "screen%(S)s/idr0012-screen%(S)s-plates.tsv"
    )
    rel_screens_dir = os.path.join(os.pardir, a, b, "screens")  # wrt plates_fn
    quiet_makedirs(screens_dir)
    for cl, screen in CL_TO_SCREEN.iteritems():
        plates_fn = plates_fn_template % {"S": screen}
        quiet_makedirs(os.path.dirname(plates_fn))
        stats_fn = "stats_%s.txt" % cl
        root = ROOT % {"cl": cl}
        basenames = sorted(os.listdir(root))
        with open(stats_fn, "w") as fo, open(plates_fn, "w") as fp:
            for bn in basenames:
                if bn in EXCLUDED:
                    continue
                d = os.path.join(root, bn)
                if not os.path.isdir(d):
                    continue
                n_wells = sum(1 for _ in os.listdir(d)
                              if os.path.isdir(os.path.join(d, _)) and
                              _.startswith("Well"))
                fo.write("%s\t%d\n" % (d, n_wells))
                screen_fn = os.path.join(screens_dir, "%s.screen" % bn)
                make_screen.main(["dummy", d, "-o", screen_fn, "-p", bn])
                fp.write("%s\t%s.screen\n" %
                         (bn, os.path.join(rel_screens_dir, bn)))


if __name__ == "__main__":
    main(sys.argv)
