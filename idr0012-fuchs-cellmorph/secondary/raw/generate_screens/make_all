#!/usr/bin/env python

import sys
import os
import errno
import make_screen

# two cell lines: HeLa (H) and U2OS (U)
ROOT = "/idr/filesets/idr0012-fuchs-cellmorph/downloaded/secondary/source-%(cl)sR/www.ebi.ac.uk/huber-srv/cellmorph/source-%(cl)sR"
CL_TO_SCREEN = {"H": "A", "U": "B"}
SCREENS_DIR = os.path.join(os.pardir, "screens")
PLATES_DIR = os.path.join(os.pardir, "screen%s/plates")
REL_SCREENS_DIR = "idr0012-fuchs-cellmorph/secondary/raw/screens"


def quiet_makedirs(d):
    try:
        os.makedirs(d)
    except OSError as e:
        if e.errno == errno.ENOENT:
            pass


def main(argv):
    quiet_makedirs(SCREENS_DIR)
    for cl, screen in CL_TO_SCREEN.iteritems():
        root = ROOT % {"cl": cl}
        plates_dir = PLATES_DIR % screen
        quiet_makedirs(plates_dir)
        basenames = os.listdir(root)
        with open("stats_%s.txt" % cl, "w") as fo:
            for bn in basenames:
                d = os.path.join(root, bn)
                if not os.path.isdir(d):
                    continue
                n_wells = sum(1 for _ in os.listdir(d)
                              if os.path.isdir(os.path.join(d, _)) and
                              _.startswith("Well"))
                fo.write("%s\t%d\n" % (d, n_wells))
                screen_fn = os.path.join(SCREENS_DIR, "%s.screen" % bn)
                make_screen.main(["dummy", d, "-o", screen_fn, "-p", bn])
                plate_fn = os.path.join(plates_dir, bn)
                with open(plate_fn, "w") as plate_file:
                    plate_file.write("%s/%s.screen\n" % (REL_SCREENS_DIR, bn))


if __name__ == "__main__":
    main(sys.argv)
