#!/usr/bin/env python

import sys
import os
import errno
import string

import make_screen

ROOT = "/idr/filesets/idr0004-thorpe-rad52/Rad52_old/Rad52"
SCREENS_DIR = os.path.join(os.pardir, "screens")
PLATES_DIR = os.path.join(os.pardir, "screenA/plates")
REL_SCREENS_DIR = "idr0004-thorpe-rad52/screens"

ALL_EXPECTED_BASENAMES = set(
    "%s%s" % (c, i) for c in string.lowercase[:8] for i in xrange(1, 13)
)

# P128 is one level above, and has the opposite well tag convention
DATA_DIR_P128 = os.path.join(os.path.dirname(ROOT), "P128")
ALL_EXPECTED_BASENAMES_P128 = set(
    "%s%s" % (i, c) for c in string.lowercase[:8] for i in xrange(1, 13)
)


def main(argv):
    try:
        os.makedirs(SCREENS_DIR)
        os.makedirs(PLATES_DIR)
    except OSError as e:
        if e.errno == errno.ENOENT:
            pass
    data_dirs = [os.path.join(ROOT, _) for _ in os.listdir(ROOT)]
    data_dirs.append(DATA_DIR_P128)
    with open("stats.txt", "w") as fo:
        for d in data_dirs:
            if not os.path.isdir(d):
                continue
            bn = os.path.basename(d)
            if bn == "P128":
                all_expected_basenames = ALL_EXPECTED_BASENAMES_P128
            else:
                all_expected_basenames = ALL_EXPECTED_BASENAMES
            all_expected_basenames |= set(
                _.upper() for _ in all_expected_basenames
            )
            all_basenames = set(_ for _ in os.listdir(d)
                                if (not _.startswith(".") and
                                    os.path.isfile(os.path.join(d, _))))
            expected = len(all_basenames & all_expected_basenames)
            fo.write("%s\t%d(%d)\n" % (d, len(all_basenames), expected))
            screen_fn = os.path.join(SCREENS_DIR, "%s.screen" % bn)
            make_screen_argv = ["dummy", d, "-o", screen_fn, "-p", bn]
            if bn == "P128":
                make_screen_argv.append("--rev-well-tag")
            make_screen.main(make_screen_argv)
            plate_fn = os.path.join(PLATES_DIR, bn)
            with open(plate_fn, "w") as plate_file:
                plate_file.write("%s/%s.screen\n" % (REL_SCREENS_DIR, bn))


if __name__ == "__main__":
    main(sys.argv)
