#!/usr/bin/env python

import sys
import os
import errno
import make_screen


ROOT = "/idr/filesets/idr0005-toret-adhesion/20150520-original-jcb/v2"
SCREENS_DIR = os.path.join(os.pardir, "screens")
REL_SCREENS_DIR = "idr0005-toret-adhesion/screens"
PLATES_DIR = os.path.join(os.pardir, "screen%s/plates")


def quiet_makedirs(d):
    try:
        os.makedirs(d)
    except OSError as e:
        if e.errno == errno.ENOENT:
            pass


def get_single_subdir(d):
    content = os.listdir(d)
    assert len(content) == 1
    subd = os.path.join(d, content[0])
    assert os.path.isdir(subd)
    return subd


def main(argv):
    quiet_makedirs(SCREENS_DIR)
    screen_map = {}
    for bn in os.listdir(ROOT):
        d = os.path.join(ROOT, bn)
        if not os.path.isdir(d):
            continue
        if bn.startswith("Secondary"):
            screen_map.setdefault("B", []).append(bn)
        elif bn.isdigit():
            screen_map.setdefault("A", []).append(bn)
    for screen, basenames in screen_map.iteritems():
        plates_dir = PLATES_DIR % screen
        quiet_makedirs(plates_dir)
        for bn in basenames:
            d = os.path.join(ROOT, bn)
            if screen == "A":
                d = get_single_subdir(get_single_subdir(d))
                plate = "Primary_%s" % bn
            else:
                plate = "_".join(bn.split())
            screen_fn = os.path.join(SCREENS_DIR, "%s.screen" % plate)
            make_screen.main(["dummy", d, "-o", screen_fn, "-p", plate])
            plate_fn = os.path.join(plates_dir, plate)
            with open(plate_fn, "w") as plate_file:
                plate_file.write("%s/%s.screen\n" % (REL_SCREENS_DIR, plate))


if __name__ == "__main__":
    main(sys.argv)
